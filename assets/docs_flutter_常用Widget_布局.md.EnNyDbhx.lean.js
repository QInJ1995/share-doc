import{_ as i,c as a,a2 as t,o as n}from"./chunks/framework.lYqQAyNq.js";const E=JSON.parse('{"title":"布局Widget","description":"","frontmatter":{},"headers":[],"relativePath":"docs/flutter/常用Widget/布局.md","filePath":"docs/flutter/常用Widget/布局.md"}'),e={name:"docs/flutter/常用Widget/布局.md"};function l(h,s,p,k,d,r){return n(),a("div",null,s[0]||(s[0]=[t(`<h1 id="布局widget" tabindex="-1">布局Widget <a class="header-anchor" href="#布局widget" aria-label="Permalink to &quot;布局Widget&quot;">​</a></h1><h2 id="单子元素布局" tabindex="-1">单子元素布局 <a class="header-anchor" href="#单子元素布局" aria-label="Permalink to &quot;单子元素布局&quot;">​</a></h2><h3 id="_1-container" tabindex="-1">1. <a href="https://api.flutter.dev/flutter/widgets/Container-class.html" target="_blank" rel="noreferrer">Container</a> <a class="header-anchor" href="#_1-container" aria-label="Permalink to &quot;1. [Container](https://api.flutter.dev/flutter/widgets/Container-class.html)&quot;">​</a></h3><p>Container是一个组合Widget，它本身不渲染任何内容，但可以在其子Widget周围添加装饰（如背景、边框、阴影等），并控制其大小和位置。</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> key,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  AlignmentGeometry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> alignment, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的对齐方式</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  EdgeInsetsGeometry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> padding,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget与Container边缘之间的间距</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  EdgeInsetsGeometry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> margin,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Container与外部其他Widget之间的间距</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> color,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Container的背景颜色</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Decoration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> decoration,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Container的装饰</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Decoration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> foregroundDecoration,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Container的前景装饰</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> width,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Container的宽度</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> height, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Container的高度</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  BoxConstraints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> constraints,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Container的约束条件</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  EdgeInsetsGeometry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> margin, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Container</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  AlignmentGeometry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> alignment, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的对齐方式</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Widget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> child, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Container内部的子Widget</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="_2-center" tabindex="-1">2. <a href="https://api.flutter.dev/flutter/widgets/Center-class.html" target="_blank" rel="noreferrer">Center</a> <a class="header-anchor" href="#_2-center" aria-label="Permalink to &quot;2. [Center](https://api.flutter.dev/flutter/widgets/Center-class.html)&quot;">​</a></h3><p>Center是一个居中布局Widget，它可以在其子Widget之间添加间隔，并控制其子Widget的对齐方式。</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> key,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> widthFactor, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的宽度因子</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> heightFactor, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的高度因子</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Widget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> child, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="_3-align" tabindex="-1">3. <a href="https://api.flutter.dev/flutter/widgets/Align-class.html" target="_blank" rel="noreferrer">Align</a> <a class="header-anchor" href="#_3-align" aria-label="Permalink to &quot;3. [Align](https://api.flutter.dev/flutter/widgets/Align-class.html)&quot;">​</a></h3><p>Align是一个对齐布局Widget，它可以在其子Widget之间添加间隔，并控制其子Widget的对齐方式。</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Align</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> key,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  AlignmentGeometry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> alignment, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的对齐方式</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> widthFactor, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的宽度因子</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> heightFactor, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的高度因子</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Widget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> child, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="_4-fractionallysizedbox" tabindex="-1">4. <a href="https://api.flutter.dev/flutter/widgets/FractionallySizedBox-class.html" target="_blank" rel="noreferrer">FractionallySizedBox</a> <a class="header-anchor" href="#_4-fractionallysizedbox" aria-label="Permalink to &quot;4. [FractionallySizedBox](https://api.flutter.dev/flutter/widgets/FractionallySizedBox-class.html)&quot;">​</a></h3><p>FractionallySizedBox是一个比例布局Widget，它可以在其子Widget之间添加间隔，并控制其子Widget的对齐方式。</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FractionallySizedBox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> key,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> widthFactor, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的宽度因子</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> heightFactor, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的高度因子</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Widget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> child, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="_5-sizedbox" tabindex="-1">5. <a href="https://api.flutter.dev/flutter/widgets/SizedBox-class.html" target="_blank" rel="noreferrer">SizedBox</a> <a class="header-anchor" href="#_5-sizedbox" aria-label="Permalink to &quot;5. [SizedBox](https://api.flutter.dev/flutter/widgets/SizedBox-class.html)&quot;">​</a></h3><p>SizedBox是一个固定大小布局Widget，它可以在其子Widget之间添加间隔，并控制其子Widget的对齐方式。</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dart</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SizedBox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> key,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> width, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的宽度</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> height, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的高度</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Widget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> child, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="_6-fittedbox" tabindex="-1">6. <a href="https://api.flutter.dev/flutter/widgets/FittedBox-class.html" target="_blank" rel="noreferrer">FittedBox</a> <a class="header-anchor" href="#_6-fittedbox" aria-label="Permalink to &quot;6. [FittedBox](https://api.flutter.dev/flutter/widgets/FittedBox-class.html)&quot;">​</a></h3><p>FittedBox是一个自适应大小布局Widget，它可以在其子Widget之间添加间隔，并控制其子Widget的对齐方式。</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FittedBox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> key,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  BoxFit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fit, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的适应方式</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  AlignmentGeometry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> alignment, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的对齐方式</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Widget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> child, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="_7-constrainedbox" tabindex="-1">7. <a href="https://api.flutter.dev/flutter/widgets/ConstrainedBox-class.html" target="_blank" rel="noreferrer">ConstrainedBox</a> <a class="header-anchor" href="#_7-constrainedbox" aria-label="Permalink to &quot;7. [ConstrainedBox](https://api.flutter.dev/flutter/widgets/ConstrainedBox-class.html)&quot;">​</a></h3><p>ConstrainedBox是一个约束布局Widget，它可以在其子Widget之间添加间隔，并控制其子Widget的对齐方式。</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ConstrainedBox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> key,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  BoxConstraints</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> constraints, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的约束</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Widget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> child, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="_8-overflowbox" tabindex="-1">8. <a href="https://api.flutter.dev/flutter/widgets/OverflowBox-class.html" target="_blank" rel="noreferrer">OverflowBox</a> <a class="header-anchor" href="#_8-overflowbox" aria-label="Permalink to &quot;8. [OverflowBox](https://api.flutter.dev/flutter/widgets/OverflowBox-class.html)&quot;">​</a></h3><p>OverflowBox是一个溢出布局Widget，它可以在其子Widget之间添加间隔，并控制其子Widget的对齐方式。</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">OverflowBox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> key,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  AlignmentGeometry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> alignment, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的对齐方式</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> minWidth, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的最小宽度</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> maxWidth, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的最大宽度</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> minHeight, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的最小高度</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> maxHeight, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的最大高度</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Widget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> child, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="_9-aspectratio" tabindex="-1">9. <a href="https://api.flutter.dev/flutter/widgets/AspectRatio-class.html" target="_blank" rel="noreferrer">AspectRatio</a> <a class="header-anchor" href="#_9-aspectratio" aria-label="Permalink to &quot;9. [AspectRatio](https://api.flutter.dev/flutter/widgets/AspectRatio-class.html)&quot;">​</a></h3><p>AspectRatio是一个比例布局Widget，它可以在其子Widget之间添加间隔，并控制其子Widget的对齐方式。</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AspectRatio</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> key,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> aspectRatio, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的宽高比</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Widget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> child, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="_10-offstage" tabindex="-1">10. <a href="https://api.flutter.dev/flutter/widgets/Offstage-class.html" target="_blank" rel="noreferrer">Offstage</a> <a class="header-anchor" href="#_10-offstage" aria-label="Permalink to &quot;10. [Offstage](https://api.flutter.dev/flutter/widgets/Offstage-class.html)&quot;">​</a></h3><p>Offstage是一个隐藏布局Widget，它可以在其子Widget之间添加间隔，并控制其子Widget的对齐方式。</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Offstage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> key,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> offstage, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget是否隐藏</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Widget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> child, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="_11-expanded" tabindex="-1">11. <a href="https://api.flutter.dev/flutter/widgets/Expanded-class.html" target="_blank" rel="noreferrer">Expanded</a> <a class="header-anchor" href="#_11-expanded" aria-label="Permalink to &quot;11. [Expanded](https://api.flutter.dev/flutter/widgets/Expanded-class.html)&quot;">​</a></h3><p>Expanded是一个弹性布局Widget，它可以在其父Widget中占据剩余的空间。</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Expanded</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> key,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> flex, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 弹性因子</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Widget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> child, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="_12-positioned" tabindex="-1">12. <a href="https://api.flutter.dev/flutter/widgets/Positioned-class.html" target="_blank" rel="noreferrer">Positioned</a> <a class="header-anchor" href="#_12-positioned" aria-label="Permalink to &quot;12. [Positioned](https://api.flutter.dev/flutter/widgets/Positioned-class.html)&quot;">​</a></h3><p>Positioned是一个定位布局Widget，它可以在其子Widget之间添加间隔，并控制其子Widget的对齐方式。</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Positioned</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> key,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> left, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的左边距</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> top, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的上边距</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> right, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的右边距</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bottom, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的下边距</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> width, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的宽度</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> height, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的高度</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Widget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> child, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="多子元素布局" tabindex="-1">多子元素布局 <a class="header-anchor" href="#多子元素布局" aria-label="Permalink to &quot;多子元素布局&quot;">​</a></h2><h3 id="_1-row" tabindex="-1">1. <a href="https://api.flutter.dev/flutter/widgets/Row-class.html" target="_blank" rel="noreferrer">Row</a> <a class="header-anchor" href="#_1-row" aria-label="Permalink to &quot;1. [Row](https://api.flutter.dev/flutter/widgets/Row-class.html)&quot;">​</a></h3><p>Row是一个水平方向的布局Widget，它可以在其子Widget之间添加间隔，并控制其子Widget的对齐方式。</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Row</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> key,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  MainAxisAlignment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mainAxisAlignment, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget在主轴上的对齐方式</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  MainAxisSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mainAxisSize, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget在主轴上的大小</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  CrossAxisAlignment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> crossAxisAlignment, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget在交叉轴上的对齐方式</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  TextDirection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> textDirection, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的文本方向</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  VerticalDirection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> verticalDirection, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的垂直方向</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  TextBaseline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> textBaseline, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的文本基线</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  List</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Widget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; children, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget列表</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="_2-column" tabindex="-1">2. <a href="https://api.flutter.dev/flutter/widgets/Column-class.html" target="_blank" rel="noreferrer">Column</a> <a class="header-anchor" href="#_2-column" aria-label="Permalink to &quot;2. [Column](https://api.flutter.dev/flutter/widgets/Column-class.html)&quot;">​</a></h3><p>Column是一个垂直方向的布局Widget，它可以在其子Widget之间添加间隔，并控制其子Widget的对齐方式。</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Column</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> key,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  MainAxisAlignment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mainAxisAlignment, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget在主轴上的对齐方式</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  MainAxisSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mainAxisSize, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget在主轴上的大小</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  CrossAxisAlignment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> crossAxisAlignment, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget在交叉轴上的对齐方式</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  TextDirection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> textDirection, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的文本方向</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  VerticalDirection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> verticalDirection, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的垂直方向</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  TextBaseline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> textBaseline, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的文本基线</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  List</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Widget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; children, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget列表</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="_3-stack" tabindex="-1">3. <a href="https://api.flutter.dev/flutter/widgets/Stack-class.html" target="_blank" rel="noreferrer">Stack</a> <a class="header-anchor" href="#_3-stack" aria-label="Permalink to &quot;3. [Stack](https://api.flutter.dev/flutter/widgets/Stack-class.html)&quot;">​</a></h3><p>Stack是一个堆叠布局Widget，它可以在其子Widget之间添加间隔，并控制其子Widget的对齐方式。</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Stack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> key,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  AlignmentGeometry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> alignment, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的对齐方式</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  TextDirection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> textDirection, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的文本方向</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> crossAxisAlignment, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的交叉轴对齐方式</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mainAxisAlignment, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的主轴对齐方式</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  List</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Widget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; children, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget列表</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="_4-indexedstack" tabindex="-1">4. <a href="https://api.flutter.dev/flutter/widgets/IndexedStack-class.html" target="_blank" rel="noreferrer">IndexedStack</a> <a class="header-anchor" href="#_4-indexedstack" aria-label="Permalink to &quot;4. [IndexedStack](https://api.flutter.dev/flutter/widgets/IndexedStack-class.html)&quot;">​</a></h3><p>IndexedStack是一个索引堆叠布局Widget，它可以在其子Widget之间添加间隔，并控制其子Widget的对齐方式。</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IndexedStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> key,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  AlignmentGeometry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> alignment, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的对齐方式</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  TextDirection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> textDirection, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的文本方向</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> crossAxisAlignment, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的交叉轴对齐方式</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mainAxisAlignment, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的主轴对齐方式</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> index, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的索引</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  List</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Widget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; children, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget列表</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="_5-flow" tabindex="-1">5. <a href="https://api.flutter.dev/flutter/widgets/Flow-class.html" target="_blank" rel="noreferrer">Flow</a> <a class="header-anchor" href="#_5-flow" aria-label="Permalink to &quot;5. [Flow](https://api.flutter.dev/flutter/widgets/Flow-class.html)&quot;">​</a></h3><p>Flow是一个流式布局Widget，它可以在其子Widget之间添加间隔，并控制其子Widget的对齐方式。</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Flow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> key,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  List</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">FlowDelegate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; delegate, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的排列方式</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  List</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Widget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; children, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget列表</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="_6-table" tabindex="-1">6. <a href="https://api.flutter.dev/flutter/widgets/Table-class.html" target="_blank" rel="noreferrer">Table</a> <a class="header-anchor" href="#_6-table" aria-label="Permalink to &quot;6. [Table](https://api.flutter.dev/flutter/widgets/Table-class.html)&quot;">​</a></h3><p>Table是一个表格布局Widget，它可以在其子Widget之间添加间隔，并控制其子Widget的对齐方式。</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> key,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  TableBorder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> border, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 表格边框</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  TableWidthType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> widthType, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 表格宽度类型</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  TextDirection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> textDirection, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的文本方向</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  TableBorder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> horizontalBorder, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 表格水平边框</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  TableBorder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> verticalBorder, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 表格垂直边框</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  List</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TableRow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; children, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget列表</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="_7-wrap" tabindex="-1">7. <a href="https://api.flutter.dev/flutter/widgets/Wrap-class.html" target="_blank" rel="noreferrer">Wrap</a> <a class="header-anchor" href="#_7-wrap" aria-label="Permalink to &quot;7. [Wrap](https://api.flutter.dev/flutter/widgets/Wrap-class.html)&quot;">​</a></h3><p>Wrap是一个流式布局Widget，它可以在其子Widget之间添加间隔，并控制其子Widget的对齐方式。</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Wrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> key,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> direction, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的排列方向</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  WrapAlignment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> alignment, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget在主轴上的对齐方式</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  WrapCrossAlignment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> crossAxisAlignment, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget在交叉轴上的对齐方式</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  VerticalDirection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> verticalDirection, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的垂直方向</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  TextDirection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> textDirection, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的文本方向</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  TextBaseline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> textBaseline, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的文本基线</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  List</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Widget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; children, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget列表</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="_8-listbody" tabindex="-1">8. <a href="https://api.flutter.dev/flutter/widgets/ListBody-class.html" target="_blank" rel="noreferrer">ListBody</a> <a class="header-anchor" href="#_8-listbody" aria-label="Permalink to &quot;8. [ListBody](https://api.flutter.dev/flutter/widgets/ListBody-class.html)&quot;">​</a></h3><p>ListBody是一个列表布局Widget，它可以在其子Widget之间添加间隔，并控制其子Widget的对齐方式。</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ListBody</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> key,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mainAxis, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的主轴方向</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  TextDirection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> textDirection, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的文本方向</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> crossAxisAlignment, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的交叉轴对齐方式</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mainAxisAlignment, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的主轴对齐方式</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  List</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Widget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; children, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget列表</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="_10-flex" tabindex="-1">10. <a href="https://api.flutter.dev/flutter/widgets/Flex-class.html" target="_blank" rel="noreferrer">Flex</a> <a class="header-anchor" href="#_10-flex" aria-label="Permalink to &quot;10. [Flex](https://api.flutter.dev/flutter/widgets/Flex-class.html)&quot;">​</a></h3><p>Flex是一个弹性布局Widget，它可以在其子Widget之间添加间隔，并控制其子Widget的对齐方式。</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Flex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> key,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  Axis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> direction, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的排列方向</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  MainAxisAlignment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mainAxisAlignment, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget在主轴上的对齐方式</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  MainAxisSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mainAxisSize, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget在主轴上的大小</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  CrossAxisAlignment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> crossAxisAlignment, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget在交叉轴上的对齐方式</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  TextDirection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> textDirection, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的文本方向</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  VerticalDirection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> verticalDirection, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的垂直方向</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  TextBaseline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> textBaseline, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget的文本基线</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  List</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Widget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; children, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 子Widget列表</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div>`,66)]))}const o=i(e,[["render",l]]);export{E as __pageData,o as default};
