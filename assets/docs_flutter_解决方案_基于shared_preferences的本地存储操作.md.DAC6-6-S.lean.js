import{_ as a,c as i,a2 as e,o as n}from"./chunks/framework.lYqQAyNq.js";const o=JSON.parse('{"title":"基于shared_preferences的本地存储操作","description":"","frontmatter":{},"headers":[],"relativePath":"docs/flutter/解决方案/基于shared_preferences的本地存储操作.md","filePath":"docs/flutter/解决方案/基于shared_preferences的本地存储操作.md"}'),t={name:"docs/flutter/解决方案/基于shared_preferences的本地存储操作.md"};function h(r,s,p,l,k,d){return n(),i("div",null,s[0]||(s[0]=[e(`<h1 id="基于shared-preferences的本地存储操作" tabindex="-1">基于shared_preferences的本地存储操作 <a class="header-anchor" href="#基于shared-preferences的本地存储操作" aria-label="Permalink to &quot;基于shared_preferences的本地存储操作&quot;">​</a></h1><p>数据存储是开发APP必不可少的一部分，比如页面缓存，从网络上获取数据的本地持久化等，那么在Flutter中如何进行数据存储呢？</p><p>Flutter官方推荐我们用sharedpreferences进行数据存储，类似于RN中的AsyncStorage。</p><h2 id="什么是shared-preferences" tabindex="-1">什么是shared_preferences <a class="header-anchor" href="#什么是shared-preferences" aria-label="Permalink to &quot;什么是shared_preferences&quot;">​</a></h2><p><a href="https://pub.dev/packages/shared_preferences" target="_blank" rel="noreferrer">shared_preferences</a>是Flutter社区开发的一个本地数据存取插件：</p><ul><li>简单的，异步的，持久化的key-value存储系统；</li><li>在Android上它是基于SharedPreferences的；</li><li>在iOS上它是基于NSUserDefaults的；</li></ul><h2 id="如何使用shared-preferences" tabindex="-1">如何使用shared_preferences <a class="header-anchor" href="#如何使用shared-preferences" aria-label="Permalink to &quot;如何使用shared_preferences&quot;">​</a></h2><ol><li><p>首先在pubspec.yaml文件中添加：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">dependencies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    shared_preferences</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">^xxx</span></span></code></pre></div><p>记得运行安装哦：flutter packages get</p></li><li><p>在需要用到的文件中导入：</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;package:shared_preferences/shared_preferences.dart&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div></li><li><p>存储数据</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> prefs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SharedPreferences</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// set value</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">prefs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setInt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;counter&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, counter);</span></span></code></pre></div></li><li><p>读取数据</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> prefs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SharedPreferences</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Try reading data from the counter key. If it does not exist, return 0.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> counter </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> prefs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getInt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;counter&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">??</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div></li><li><p>删除数据</p><div class="language-dart vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">final</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> prefs </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SharedPreferences</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">prefs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">remove</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;counter&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div></li></ol><h2 id="shared-preferences有那些常用的api" tabindex="-1">shared_preferences有那些常用的API <a class="header-anchor" href="#shared-preferences有那些常用的api" aria-label="Permalink to &quot;shared_preferences有那些常用的API&quot;">​</a></h2><h3 id="存储相关" tabindex="-1">存储相关 <a class="header-anchor" href="#存储相关" aria-label="Permalink to &quot;存储相关&quot;">​</a></h3><h3 id="读取相关" tabindex="-1">读取相关 <a class="header-anchor" href="#读取相关" aria-label="Permalink to &quot;读取相关&quot;">​</a></h3>`,11)]))}const E=a(t,[["render",h]]);export{o as __pageData,E as default};
